apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.db.name }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: "db"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: db
          image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.db.rootPassword | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.db.database | quote }}
            - name: MYSQL_USER
              value: {{ .Values.db.username | quote }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.db.password | quote }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql
      volumes:
        - name: data
          emptyDir: {}
        - name: init-sql
          configMap:
            name: {{ .Values.db.name }}-init-sql
